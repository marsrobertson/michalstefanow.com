How to learn coding and find a well-paid job in IT?


My both parents were studying CS (Computer Science) and ever since I had computer at home. 



Your way will differ from my way - technology has moved forward and now we have completely new set of tools and learning platforms.


There are plenty of resources available - some of them are free but in reality you should invest in finding quality ones. But how to find them?

Look no further: ROB PERCIVAL


Experience.

Professionalism.

Second Edition.

Save your energy on actually doing stuff, rather than hesitating which course to choose.

And if you stop reading this book in favour of doing the actual course - well done to you. Action speak louder than words, you've chosen rightly.

(...you can always resume couple weeks later, once the course is completed...)

Thank you for bearing with me. One way or another you either see what is it like to solve technical problems or you are genuinely curious what are skills and qualities are practical in the job of web developer.


(make your own judgement, out of 100 competing options I'm offering you a decent one that should be immediately placed in your shortlist)

Enough of the praise, see ______ reviews.

<<<< because I'm recommending him here a voucher code >>>>

Actually... His prices are so low it would be unfair to drive them any further...



==============================


In the past couple of years there is market demand for IT workers. Government announces the need for STEM (science, technology, engineering, mathematics) graduades and top companies are competing for scarce talent.

Back in 2005, when I was choosing my university the situation was the same. I invested 5 years of my life into a Computer Science degree and from the time perspective I have no idea if that was the right choice. Actually it's been more than 5 years, due to fallacy of sunken cost. Once you have a degree it's typical to start working in field of study to recoup the investment. Fast forward a few years, a few promotions, a few new jobs - now I'm "six figure" salary and quitting has never been more difficult.

I try to rationalise - it's a good job - it provides for education and experiences and I'll keep it as long as it serves me.

Making resonable of money in job changes my perception about time and money.

First disclaimer about "resonable" - my father, university lecturer with PhD title was earning $10 (ten US dollars) per month. There were no passports, noone could leave the country (only those brave refugees who were claiming political asylum in other places).  I was born in 1986, the communism fell in 1989 (many consider Berlin Wall as a symbol). I don't remember the communism, food rationing and empty shelves in the shops... Some people made a lot of money during the transformation, it was a stormy time with a lot "communist party", secret service  and hyperinflation.

(I was a kid, don't ask me about details)

1) Going to festivals, hitchhiking, working in a kitchen (carrying water)

2) Trouble in a relationship, hoping that money will fix it

Nope, money is only a multiplier. We traded one set of problems to another... I admit many mistakes and if you meet my wife tell them I'm sorry.  This book is about coding and finding job as a programmer but I share some "pearls of wisdom" when comes to relationships as well.



********************************

I was searching for job many times. Yes, I was fired a number of times... I've spend my fair share of "chair hours" writing code, being a parent, working on a countless side projects. I still don't own the ultimate recipe - it's unique for each individual circumstances - but I have a vast body of knowledge. Be critical, use your thinking, I do not have a degree in writing - and I do not want to posses a degree (see the part about university) - all I have a deep core belief that I can add some value. If I dedicate 500 hours towards creating and promoting this thing and someone becomes a successful programmer - that's 8 hours per day multiplied by weeks, months and years. I'll have the impression that I did something right and world has become a better place.

Another motivation is selfish - don't get me wrong - I'm the egoist. Furthermore - I believe morther Terese was selfish and she was doing all her work for the joy of helping. Same applies to me, give money to homeless is a selfish act:
* it makes me happy
* they have more money, so they can help others (including me)
* they are less likely to commit a crime

(not accusing or anything but being desperate sometimes require desperate measures - to steal a wallet might seem like an immediatete relief of financial needs but causes a lot of distress - to apply for new ID and payment cards is a serious hassle and cost much more in terms of wasted time - that is why I have a principle to always give money)

YES - helping homeless (or any other cause) is a selfish act. Another "concept" is paradox of choice - <<< WATCH THE TED TALK >>> - in essence - if there are 2 flavours of icecream we are much more likely to be happy with the choice.

Yet another, slightly related - mental fatigue - when we wake up we have mental power to do 100 decisions - choosing your breakfast is a decision and then during a day you may not have enough power to be sharp when it really matters. That's why Steve jobs - always the same black turtle neck, Barrack Obama - same suit, Mark Zuckerberg - same T-shirt. I'm having same eggs and beans in my work canteene. I'd love to go vegan but I don't have enough support network and the canteene does not provide enough options.

(I have some tips about protein intake when going vegan - sufficient protein intake - Engevita, Chlorella, Hemp Seeds - but that is a subject for another book - not right now, not in this climate)




********************************

The million dollar question I would like to ask - are you going to learn programming to get a job in the field?

My advice would be to reframe your mindset - learn programming to be super efficient when performing your existing tasks.

IFTTT
Zapier
Google Docs
Excel
Extracting data from websites - import.io
Marketing automation


Sprinkling some programming knowledge over traditional problems gives you an edge. Even knowing some programming terms allows you to better communicate with technical people.

I guess that's not what you wanted to hear, me encouraging you to mantain your current profession.

Good news is - automation is taking over - people don't have to work. See what percentage of population works in agriculture - 1% maybe. Nature already knows how to grow food, there is abundant energy from the Sun, and in my reality people don't have to work... It will take some time until it will happen but have a look at Universal Basic Income.



********************************

Something with immediate rewards.

It worked for me.
Working on the web is visually pleasing experience.
I save the file - autoreload - next second I see updated version on the screen.
When I was working with terminal - that black screen and blobs of text - it was more difficult to establish whether the work I do is working or not.
I highly encourage you to have some visual result of your work.

Programming can often be frustrating and to persevere you need to have many wins during the day.



Currently I work in a job - highly regulated environemnt - so many different system and process isn't fully automated. Even the simplest change such as changing text here or there is 15 minutes. Of course I'm able to find the place in code that needs in no time. But... So


Tracking progress.
Source control repository.
Build + deployment.
Veryfying that fix has been applied.

(sorry if I'm using difficult workds, see glossary)

15 minutes is the bare minumum, physicla limit of our systems.
That was the super-simple example, usually changes are much involved and require testing in a series of browsers.
On my best day I was able to close 4 different issues.

Small win every time - allow yourself a boost of happiness - your work is progressing.







********************************
1. Don't go to University

It takes too long. It's too expensive. In the UK and US studing is a costly activity - students tend to take loans so when they leave university they are in debt. Hurray! ou got a degree, now you have to work to pay off your loan - welcome to the modern age of slavery.

I have nothing against education and learning. You should always learn. ddddddddddddddddddOr if you really have to:
* Take a gap year first
* Be sure the field of study
* Don't pay for it: scholarhips, or a different country


I made several mistakes in my approach to university. Probably the biggest one was sense of entitlement - because I graduated from the top high school and was attending top degree I thought I'll get new jobs easily.

> Hard work beats talent, when talent doesn't work.

University could be good in terms of making friends, expanding your network but... I bet you can make friends anyway. I highly encourage you to watch a few video about "daygame" (approaching people of opposite gender) and you'll have social anxiety. One Jedi trick to make it work - be certain (absolutely convinced) about your self-worth and think in terms "I'm the best thing that could happen to that person".




Social skills, positive attitude, equally important at work.

I can tell you that some of the best programmers I know have mild spectrum of autism - asperberg syndrome. What it emans in plain english - deep interest in particilar subject, being very detailed, etc... These qualities are super useful when programming so no wonder why they are so good! There is an element of social awkwardness but they cope very well.





********************************

Get a job

The best what could happen - to learn on the job.
In reality - there will be always some entry exam / recruitment test.
So you need to know some basics.
It should be clear, it should be obvious - as an employer I would rather hire someone who has already some skills. No such thing as free launch... I was a bad employee - I always saw 'what's in it for me' - I should think more about the value I provide to the company.





********************************
2. Set your mind on a (realistic) project


The best project is one that is slighly beyond your current level of ability - outside of your comfort zone - but not impossible.


It doesn't have to be realistic at first - soon you'll get a lot of feedback forcing you to re-asses, soon you'll realise that some of the features are not feasible.


I really like programming test for ThoughtWorks (very well known consultancy) - create your online portfolio. It's broad, it's generic, everyone needs it. It's a good way of testing candidate abilities in a multiple ways.

1) Are they creative
2) Are they able to work without supervision
3) Ability to learn about the accomplishments

I didn't pass this test but the experience itself was very positive.

Lessons learnt - when you want the job - go the extra mile.
Lessons learnt - be specific with your expectations. I don't like when I have too much time - it raises the bar and it suggests I should deliver something outstanding.

60 tasks, 60 minutes. These are cannot be massive tasks. I can quickly read, understand, process, answer or make notes for future reference and solve it rather well.

I made a note to try some IQ and MENSA test - <<< TODO: MENSA TESTS RESULTS >>>




********************************

Choose the line of work that suits you

My way of thinking - to do things independently. You probably saw some pictures of guys sitting on the beach with their laptop... If your skills are valuable only as part of a larger team - say PM (Project Manager) - then it will be difficult to become independent. Web development is different - pretty much every business and every person requires an online presence in one shape or another - there is a demand web development services and there is huge chance you'll find a job too, and if finding regular job is not something for you - you'll be able to work on freelance basis with your selected clients.

 

There are many technical areas that require different mindset - such as testing, database design, system administration.

My feeling is that web is most versatile and super easy to get started


********************************

How to find your first client?

Just ask around. Word of mouth can go a long way. There are so many people - self-employed independent contractors who are just about to start their own thing but require a website... Because you are starting and they are starting - you can form a symbiotic relationship, a winning team - and keep the relationship growing.

Working for free shouldn't be an option - assuming you did your homework - you are perfectly able of delivering some value. People who get stuff for free - do not appreciate it. On the other hand - people who pay - have expectations, regardless the actual monery value. Paying £100 or £1000 is categorised in the same mental category as "payment" so I encourage you to follow the following formula:
1) think about the amount that you think is on the upper side what you think is fair
2) multiply the number by two


********************************

Communication with client

Have in writing, standard terms, letter of intent.
- scope
- date
- assets (images, text)
- maintenance


********************************

See what programming languages, frameworks, technologies are relevant

I know JavaScript very well.

I know Python is very good for learning and is widely supported.



The dealbreaker about JavaScript - it is used on the web and it is super easy to get started. You already have the device capable of running JavaScript out of the box - no need to install anything - if you are able to read this book, you alread have a web browser.

In the moment of writing this book Google is making big push around Tensor Flow - framework dedicated towards machine learning.

Another good choice when learning new technology (this is something I'll probably do) it to learn smart contracts - Ethereum, Blockchain, Solidity... At this point in time I have only a general idea what's involved but I feel intuitively that in the future people will less depend on government but will create their own jurisdictions. It is already happening and Blockchain programmers are in high demand.

<<< NOTE TO SELF: JUST FUCKING DO IT >>>

Another note to self - I'm alread a programmer - spending 8 hours a day in front of a computer coding. I don't have much energy for programming, as opposed to writing a book which seems a relaxing activity. Offloading my intellectual property - everything I know about modern world and how to navigate the reality.


********************************


Use libraries and APIs platforms

Sometimes I say my job is plumbing things together.

Everything has been done already, many problems has been solved. Opportunities lives on the intersection of things. Tinder for dogs - voilla! And there is the thing:
- no need to build a phone
- no need to develop fast-charfing battery system
- no need to worry about WiFi congfiguration and cellurar connectivty

You take existing tools and use them. Standing on the shoulders of the giants.

********************************

Bit about web developement


Every single piece of software comes with 30 days trial. Try a few and make your own opinion - see what works for you best. Good editor or IDE (integrated development environment) will save you thousands of hours in the long run.



<<< XKCD configure >>>

Personally I don't like spending time configuring stuff. It should work out of the box, without fiddling in the settings. Very often I'm disappointed when some tool / framework / library doesn not have a working demo. It happens way too often and quite literally - I'm frustrated, I'm tired, by the time I solve the mystery I don't have much energy to use the actual product.

If it happens to you - don't worry - I've been in a similar position infinite number of times. Trying out new thing and banging head against the wall. With experience you'll learn how to troubleshoot typical problems and how to ask better questions.

StackOverflow
Create your profile now.
You know this website anyway.
Any Google search for a certain coding error gets you there.
Even Google itself in their documentation is linking to StackOverflow when asking for support.
It's effectiely a "go to" place for progoramming community.
So get your profile set up, full stop.

Some amazing thing about Stack Overflow:

1) As you start typing your question you'll be presented with some suggestions - to related topics.

Always mention what you have tried already what was the output.

Don't post "here is my code, doesn't work" - other people on the site are programmers too.

<<<< SECREt >>>>
Actually in one of my previous jobs - I was bored at work - 1 hour each day solving other peoplre

2) Precise communication

You are describing problem to other people.
Need to be precise, specific.
Soon you'll discover that in the process you are starting answering your own question.
As you start explaining what have you tried, you'll  discover "but I haven't tried that" and before posting the question you'll have a chance to discover other options.

3) Isolated case

Don't just post 100+ lines of code.
Minimise the code that is problematic.
It is another great exercise - simplifying the problem.
Sometimes there are some "unrelated" unintended consequences and by reducing the problem it may start working - then you'll know the offending bits of code.




Rubber duck debugging

There process of talking your problem to another person - when there is no another person around - use a rubber duck instead. It's similar to StackOverflow in a way that you explain your problem in a detailed manner.


********************************

Become independent

Successful companies have teams and various methods of managing complexity. I challenge you to become independent - of course at some point you'll be dependent on your customers but the point still stands - to be able to deliver something from start to finish. It doesn't have to be next Mona Lisa, something "good enough" is good enough. To be independent and be able to do stuff without communication overhead, waiting for other people, not to mention hiring other people - massive plus.

I suggest you have a look at Firebase. I started using them back in 2013 while they were still in private beta - they were sponsoring a hackathon (weekend event dedicated where designers and developers build stuff). In 2016 they were acquired by Google which means "we are here to stay" and if you learn these skills it's a huge

<<< Facebook Break Fast and Stable Infra>>>


Knowing a little bit of everyting (full stack) will give you a competetive edge.

I use JavaScript


Heroku

Node

Debugger


********************************


********************************

Test your work


CHROME, FIREFOX, EDGE

You'll have to test in each browser anyway :)

Chrome is the most popular browser.

Historically Firefox was a dominant website for developers



TEST ON MOBILE

iOS, Android and Windows Phone potentially.



It happened to me many times that it worked for me, sent it to the client and it wasn't that great :)

Usually what I do this time is to record 1 minute walkthrough video - me showing stuff. To record 1 minute video takes exactly 1 minute, then a few seconds to upload to Youtube, set as "unlisted" and add [unlisted] in the title so your client doesn't freak out :)

(of course the privacy option is visible but not immediately obvious for everyone)

Recording short videos goes a long way. Sometimes I do it instead of writing email, maybe I should do this instead of writing this book? So here is what I do - quote this fragment - and if 10 people pre-pay Kickstarter style video course based on this book I'll do it. It won't be reading the stuff, it will be probably new content :)



4. Choose a few tools and know them well


A) EDITOR
Sublime Text
Visual Studio Code (FREE)
WebStorm (and other)


B) COMMUNITIES

Github:
By far the largest


BitBucket / GitLab:
Github is very popular but private repositories require a monthly fee. Other competetors occupy this niche and offer them for free.
What is a private respoistory?



StackOverflow:

JSFiddle
JsBin
Plnkr
Codepen

I use them equally. JSFiddle was probably the first one and is traditionally


HackerX
HackerWall
InterviewStreet
TopCoder


Dribble:
Mostly for designers.
Sometimes I push some pixels here and there but I'm not a designer.
I asked for invite a number of times and eventually I didn't get it - I wasn't determined enough.


********************************

5. Go to a bootcamp ()if you can easily afford it)

Personally I've never been to such facility but it seems legit.

It ticks all the boxes. What could possibly go wrong? The reality is most of the people cannot afford thousands of dollars / pounds and several weeks out of their life.

(it's not only cost of tuition but cost of the lost income)

Some people take loans (banks, friends, family) to undertake such education. It is defnitely an option - using money as a tool, as an enabler.

I can honestly tell you - in the times when I was using bank loans I didn't feel well.

******************************

Buying a house

I did some research.
What are the associated costs: stamp duty, solicitor fees, valuation costs
In the UK there are some special options for first-time buyers so I asked if it is allowed to rent such a property.




Maybe I could maximise my salary, organise the deposit, and buy some shoebox. But do I want to invest in real estate? I'm actually doing it in Wales... Refurbishing old chapel (built in 1838). The chapel is huge and we cannot afford to work on the main space. There is a vestry - small building attached to the chapel that doesn't have so many restrictions and we don't need that much money to make it work.

(London is a place where all the money form Asia, China, Russia, Middle East is invested and I don't want to compete with these guys)

(also the old fashioned concept of working in an office is coming to an end)

Historically real-estate prices has been going up but I'd much rather place a bet on options that provide more independence.



*******************************

Polyamory.

I'm ont qualified. I was popular at school but I was never dating more than a single girl at time. These days I feel attraction towards opposite sex and I'm allowing the following concept:
* sexual partner
* business partner
* yoga partner
* running partner

We can pick and choose our relationship


*******************************


Having kids.

You must be really bored.
Do yourself a favour - borrow kids of your friends and relief them.
You'll see what is it like to be permamnenly responsible.
I did a major mistake - rather than read books and ask people how to better parent, I was trying to maximise my productivity and per hour output.
RIDICOLOUS. That was a flawed thinking.




My kids are super cool. They are smart, clever, adventerous, no medical conditions... Every parent can say that so I'm not even attemping to measure "coolness of kids" - they are all fantastic. Especially these days - with so many crystal, indigo, rainbow  children coming to this plaet.



Honest conversation and sexual manipulation.





Would a guy lie to a girl to have sex with her? Potentially... That's what worries me.


I'm worried that some people fight each other because their agressions is not released, testosterone is too high.


Sasha Daygame - they wouldn't fight if they had sex, beautiful viwes and children.

Coming from the position of infinite abundance - there is always enough of everything for everyone. Even if something is available in very limited quantities the price goes up and the product is available at higher price, and other mid-range and low-end product appear.






********************************


6. Signup for the online course on Udemy, Coursera, EdX or any other platofmr

I remember the ver first course of this type. It was still a novelty. The professor went on to establish one of successful in the space

<<< RESEARCH CORRELATION >>>

And you know what? The most successful programmers are doing this.

I did this.

But I'm not doing it right now.

You may ask why?

1) writing this book
2) in my area of expertise I'm already specialist, courses target mostly newcommers
3) bit tired to code after long day at work

(probably a few other reasons)



********************************

Have a code repository with your code samples.

Majority of the recruiters ask for it and I agree to that - if I was hiring I'd always require to see code samples.


********************************









********************************

XX) ML snd AI (machine learning and artifical intelligence)

Some related fields would be CV (computer vision) and NLP (natural language procesing).

We have AI - artifical intelligence - there is also IA - intelligent assistant - Amazon Alexa and Google Home - I should actually try it out.

It must be a great experience to actually ask computer about the weather. I'm pretty sure I'd be able to mention a number of idea, too bad my programming skills (and ability to focus) are not that good anymore.



********************************

Truth bombs and other things I don't like

Bush family was doing business with Hitler?

In the era of free information such association would be seriously uncool. For some reason it didn't stop them becoming president of the United States - much respect to them!

You sure know 9/11 - some airplanes hitting some buildings that consequently fell down. Have you heard of Building 7? That is completely bonkers - please apply some critical, rational thinking

Fluoride in the water.

War on drugs + Private prison system + Cash for kids scandal.

(Lowcy Skor in Poland - selling information about deceased people to funeral homes - too bad people haven't died yet so medical stuff was feeding them with a drug causing death)

Sugar industry sponsoring research stating that fat is leading cause of obesity.

Exxon Mobil and climate denial.

Fashion Models.

Consuption.

Advertising of loans, debts and buying stuff that you can pay later.



********************************


In the world that takes advantage
BE REBELIOUS - BE HAPPY


********************************



WAR ON DRUGS

Develop your own judgement about mind altering substances.

Cannabis is leading the way.

Did they make drugs illegal because it can harm you, while keeping alcohol widely available?

(writing about mind altering substances still remain controversial subject and this book is not about psychedelics)

I can only tell you in every 




********************************

GLOSSARY:

Hacker
Hackathon
IDE
